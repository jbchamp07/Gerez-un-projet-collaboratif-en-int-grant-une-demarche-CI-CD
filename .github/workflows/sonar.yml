name: SonarCloud Quality Check

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-analyze:
    name: Build & Analyze with SonarCloud
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      # Setup Node.js for Frontend
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'npm'
          cache-dependency-path: front/package-lock.json

      - name: Install frontend dependencies
        working-directory: front
        run: npm ci

      - name: Build frontend
        working-directory: front
        run: npm run build --if-present

      - name: Run frontend tests (with coverage)
        working-directory: front
        run: npm test -- --watch=false --code-coverage --browsers=ChromeHeadless

      # Setup Java for Backend
      - name: Setup Java 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Cache Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build backend & generate coverage
        working-directory: back
        run: mvn clean verify

      # Run SonarCloud analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=jbchamp07_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD
            -Dsonar.organization=jbchamp07
            -Dsonar.java.binaries=back/target/classes
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
